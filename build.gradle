import org.elasticsearch.gradle.info.BuildParams

buildscript {
  dependencies {
    classpath "org.elasticsearch.gradle:build-tools:${elasticsearchVersion}"
  }
}

plugins {
  id 'java'
}

apply plugin: 'elasticsearch.testclusters'
apply plugin: 'elasticsearch.esplugin'

esplugin {
  name 'rest-handler'
  description 'An example plugin showing how to register a REST handler'
  classname 'org.elasticsearch.example.resthandler.ExampleRestHandlerPlugin'
  licenseFile file('LICENSE.txt')
  noticeFile file('NOTICE.txt')
}

validateNebulaPom {
  validateNebulaPom.enabled = false
}


// No unit tests in this example
test.enabled = false

tasks.register("exampleFixture", org.elasticsearch.gradle.test.AntFixture) {
  dependsOn testClasses
  env 'CLASSPATH', "${-> project.sourceSets.test.runtimeClasspath.asPath}"
  executable = "${BuildParams.runtimeJavaHome}/bin/java"
  args 'org.elasticsearch.example.resthandler.ExampleFixture', baseDir, 'TEST'
}

integTest {
  dependsOn exampleFixture
  runner {
    nonInputProperties.systemProperty 'external.address', "${-> exampleFixture.addressAndPort}"
  }
}

testingConventions.naming {
  IT {
    baseClass 'org.elasticsearch.test.ESTestCase'
  }
}
